x-pretix-environment: &pretix-environment
  PRETIX_DATABASE_NAME: ${DATABASE_NAME}
  PRETIX_DATABASE_USER: ${DATABASE_USER}
  PRETIX_DATABASE_PASSWORD: ${DATABASE_PASSWORD}
  PRETIX_MAIL_FROM: ${MAIL_ADDRESS}
  PRETIX_MAIL_HOST: ${MAIL_HOST}
  PRETIX_MAIL_USER: ${MAIL_USER}
  PRETIX_MAIL_PASSWORD: ${MAIL_PASSWORD}
  PRETIX_MAIL_PORT: ${MAIL_PORT}
  PRETIX_MAIL_TLS: ${MAIL_TLS}
  PRETIX_METRICS_USER: ${METRICS_USER}
  PRETIX_METRICS_PASSPHRASE: ${METRICS_PASSWORD}
  PRETIX_PRETIX_URL: https://${URL}

services:
  init:
    image: pretix/standalone:2024.7.0
    environment: *pretix-environment
    command: migrate
    volumes:
      - ./app/pretix.cfg:/etc/pretix/pretix.cfg:ro
    networks:
      - postgres
      - redis
    depends_on:
      - postgres
      - redis
    profiles:
      - init

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    labels:
      ofelia.enabled: true
      ofelia.job-exec.runperiodic.command: pretix cron
      ofelia.job-exec.runperiodic.schedule: "@every 30m"
    environment: *pretix-environment
    volumes:
      - ./app/data:/data
      - ./app/pretix.cfg:/etc/pretix/pretix.cfg:ro
    networks:
      - caddy
      - postgres
      - prometheus
      - redis
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./db/data:/var/lib/postgresql/data
    networks:
      - postgres
    restart: unless-stopped

  redis:
    image: redis:8-alpine
    networks:
      - redis
    restart: unless-stopped

  ofelia:
    image: mcuadros/ofelia:0.3
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

  caddy:
    image: caddy:2.10-alpine
    ports:
      - "80:80"
      - "443:443"
    command: >
      sh -c "
        export METRICS_TOKEN=$$(echo -n "$$METRICS_USER:$$METRICS_PASSWORD" | base64)
        exec caddy run --config /etc/caddy/Caddyfile --adapter caddyfile
      "
    environment:
      EMAIL: ${ACME_EMAIL}
      METRICS_USER: ${METRICS_USER}
      METRICS_PASSWORD: ${METRICS_PASSWORD}
      URL: ${URL}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
    networks:
      - caddy
      - prometheus
    restart: unless-stopped

  restic:
    build:
      context: ./restic
      dockerfile: Dockerfile
    hostname: restic
    init: true
    labels:
      ofelia.enabled: true
      ofelia.job-exec.backup.command: sh /scripts/backup.sh
      ofelia.job-exec.backup.schedule: 0 3 * * *
      ofelia.job-exec.prune.command: restic forget --keep-daily 30 --prune
      ofelia.job-exec.prune.schedule: 0 15 * * *
    environment:
      RESTIC_REPOSITORY: ${BACKUP_REPOSITORY}
      RESTIC_PASSWORD: ${BACKUP_PASSWORD}
      PGDATABASE: ${DATABASE_NAME}
      PGUSER: ${DATABASE_USER}
      PGPASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./app:/app
      - ./app/data:/data:ro
      - ./restic/scripts:/scripts:ro
    networks:
      - postgres
    depends_on:
      - postgres
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v3.5.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - prometheus
    restart: unless-stopped

  postgres_exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:v0.17.1
    environment:
      DATA_SOURCE_URI: postgres/postgres?sslmode=disable
      DATA_SOURCE_USER: ${DATABASE_USER}
      DATA_SOURCE_PASS: ${DATABASE_PASSWORD}
    networks:
      - postgres
      - prometheus
    depends_on:
      - postgres
    restart: unless-stopped

  redis_exporter:
    image: oliver006/redis_exporter:v1.77.0-alpine
    environment:
      REDIS_ADDR: redis
    networks:
      - prometheus
      - redis
    depends_on:
      - redis
    restart: unless-stopped

  restic_exporter:
    image: ngosang/restic-exporter:1.7.0
    init: true
    environment:
      RESTIC_REPOSITORY: ${BACKUP_REPOSITORY}
      RESTIC_PASSWORD: ${BACKUP_PASSWORD}
      REFRESH_INTERVAL: 21600
    networks:
      - prometheus
    depends_on:
      - restic
    restart: unless-stopped

networks:
  caddy:
  postgres:
  prometheus:
  redis:
